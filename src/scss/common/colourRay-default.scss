.revealIn{
    @include hideLogo();
}

.burst{
    position: absolute;
    left:0;
    top:0;
    right:0;
    bottom: 0;
    display: block;
    overflow: hidden;
    pointer-events: none;
}

.ray{
    position: absolute;
    left:20px;
    top:10px;
    width: 0; 
    height: 0; 
    transform-origin: 50% 0;
    animation-direction: normal;
    animation-fill-mode: forwards;
    animation-duration: $rayAnim;
    will-change: transform;
    
    @media (min-height:50px){
        top:40px;
    }
    
    @media (min-width:160px){
        left:40px;
    }
    
    @media (min-height:50px) and (max-height:249px){
        top:20px;
    }
    @media (min-height:600px){
        top:80px;
    }
    @media (min-width: 700px) and (min-height: 400px){
        top:80px;
        left:60px;
    }
    @media (min-height: 1000px){
        top:120px;
        left:120px;
    }
    @media (min-width: 900px) and (min-height:250px){
        top:40px;
        left:100px;
    }
}

@each $label, $map in $positions {
    
    $size-start : map-get($map, start-size);
    $size-mid : map-get($map, mid-size);
    $size-end : map-get($map, end-size);
    $rotate-start : map-get($map, start-rotate);
    $rotate-mid : map-get($map, mid-rotate);
    $rotate-end : map-get($map, end-rotate);
    $colour : map-get($map, colour);
    
    .#{$label} {
        
        transform: rotate($rotate-start);
        @include setWidth($size-start);
        border-bottom: 600px solid $colour;
    
        @media (min-width: 300px) and (max-width: 599px){
            @include setWidth($size-start + $loAddSize);
        }
        @media (min-width: 600px) and (max-width: 699px){
            @include setWidth($size-start + $medAddSize);
        }
        @media (min-width:700px) and (max-width:899px){
            @include setWidth($size-start + $largeAddSize);
            
            border-bottom: 900px solid $colour;
        }
        @media (min-width:900px){
            @include setWidth($size-start + $xLargeAddSize);
            
            border-bottom: 900px solid $colour;
        }
        @media (min-height: 600px) and (max-height: 699px){
            @include setWidth($size-start + $medAddSize);
            border-bottom: 800px solid $colour;
        }
        @media (min-height:700px){
            @include setWidth($size-start + $xLargeAddSize);
            border-bottom: 1200px solid $colour;
        }
        @media (min-height:1200px){
            @include setWidth($size-start + $xxLargeAddSize);
            border-bottom: 1400px solid $colour;
        }
    }
    
}

@mixin default-ray(){
    
    @each $label, $map in $positions {
    
        $size-start : map-get($map, start-size);
        $rotate-start : map-get($map, start-rotate);
        $colour : map-get($map, colour);

        .#{$label} {

            transform: rotate($rotate-start);
            @include setWidth($size-start);
        }

    }
    
}